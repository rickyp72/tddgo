---
# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
box: golang
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
#build:
#  # The steps that will be executed on build
#  # Steps make up the actions in your pipeline
#  # Read more about steps on our dev center:
#  # http://devcenter.wercker.com/docs/steps/index.html
#  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
#    - setup-go-workspace
build:
    steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/rickyp72/tddgo

    - script:
       name: env
       code: env
    # Gets the dependencies
    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go get -v github.com/rickyp72/tddgo
          go version
          mkdir /go/rp
          ls -ltr /go/src
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          echo $PATH

    # Build the project
    - script:
        name: go build
        code: |
          echo $PATH
          go build ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...
deploy:
  steps:
    - internal/docker-push:
        username: $USERNAME
        password: $PASSWORD
        tag: tddgo
        cmd: tddgo
        ports: "8080"
        repository: rickyparkinson/tddgo
        registry: https://registry.hub.docker.com/v2
